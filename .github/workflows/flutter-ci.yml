name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Analyze, Test & Build (Android)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Cache pub and gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle
          key: ${{ runner.os }}-flutter-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-flutter-cache-

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget unzip xz-utils

      - name: Install Flutter (stable branch)
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1 $HOME/flutter
          # Make flutter available in this step and for subsequent steps
          export PATH="$HOME/flutter/bin:$HOME/flutter/bin/cache/dart-sdk/bin:$PATH"
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          echo "$HOME/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          flutter --version

      - name: Precache artifacts (optional)
        run: |
          # Precache commonly used artifacts; ignore errors if Android SDK not present yet
          flutter precache --android || true

      - name: Install dependencies
        run: flutter pub get

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Analyze code (non-failing)
        run: |
          echo "Running flutter analyze (errors will be reported but won't fail the job)..."
          flutter analyze || true
          rc=$?
          if [ $rc -ne 0 ]; then
            echo "flutter analyze exited with code $rc; check output above for details. Continuing job as requested."
          else
            echo "flutter analyze passed."
          fi

      - name: Run tests
        run: flutter test --coverage

      - name: Build Android release APK
        if: ${{ success() }}
        run: flutter build apk --release --no-shrink

      - name: Upload APK artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
